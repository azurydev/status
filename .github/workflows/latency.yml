name: 'Latency'

on:
  schedule:
    - cron: '*/5 * * * *'

jobs:
  update:
    runs-on: 'ubuntu-latest'

    steps:
      - name: 'Git Checkout'
        uses: 'actions/checkout@v2'

      - name: 'Setup Node.js'
        uses: 'actions/setup-node@v1'
        with:
          node-version: '16.x'
      
      - name: 'Install node-fetch'
        run: 'npm install node-fetch@2'

      - name: 'Update Latency'
        uses: 'actions/github-script@v6'
        with:
          script: |
            const fetch = require('node-fetch')
            , services = require('./services.json')
            , latencies = require('./latency.raw.json')
            , { getLatency } = require('./dist/getLatency.js')

            let tree = (await (await fetch('https://api.github.com/repos/azurydev/status/git/trees/dev')).json()).tree
            tree = (await (await fetch(tree.filter(i => i.path === 'data' && type === 'tree')[0].url)).json()).tree

            const { raw, averages } = await getLatency(fetch, services, latencies)

            await github.rest.repos.createOrUpdateFileContents({
              owner: context.repo.owner,
              repo: context.repo.repo,
              path: 'data/latency.raw.json',
              sha: tree.filter(i => i.path === 'latency.raw.json')[0].sha,
              content: Buffer.from(JSON.stringify(raw)).toString('base64'),
              message: 'bumped `latency.raw.json`'
            })

            tree = (await (await fetch('https://api.github.com/repos/azurydev/status/git/trees/dev')).json()).tree
            tree = (await (await fetch(tree.filter(i => i.path === 'data' && type === 'tree')[0].url)).json()).tree

            await github.rest.repos.createOrUpdateFileContents({
              owner: context.repo.owner,
              repo: context.repo.repo,
              path: 'data/latency.json',
              sha: tree.filter(i => i.path === 'latency.json')[0].sha,
              content: Buffer.from(JSON.stringify(averages)).toString('base64'),
              message: 'bumped `latency.json`'
            })
